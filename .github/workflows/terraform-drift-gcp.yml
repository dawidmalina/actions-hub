name: Terraform Drift

on:
  # define reusable section
  workflow_call:
    inputs:
      product:
        description: "Define product name"
        required: true
        type: string
      slack_channel:
        description: "Define product name"
        default: "G01M6MYAQ2K" # #cs-notifications
        required: false
        type: string

env:
  # remember to change in all terraform* files
  TERRAFORM_VERSION: 1.4.3

jobs:
  prepare:
    name: prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 1
      - name: Get all environments(s)
        id: changes-as-json
        run: |
          echo $( ls -d */*/* )

          # all
          list=$( echo $( ls -d */*/* ) |sed 's/ /", "/g'  )
          echo "all_changed_files=[\"${list}\"]" >> "$GITHUB_OUTPUT"
          echo "any_changed=true" >> "$GITHUB_OUTPUT"
    outputs:
      all_changed_files: ${{ steps.changes-as-json.outputs.all_changed_files }}
      any_changed: ${{ steps.changes-as-json.outputs.any_changed }}

  terraform:
    name: drift
    if: needs.prepare.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        dir: ${{ fromJson(needs.prepare.outputs.all_changed_files) }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to main for the config files
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.dir }}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 1

      # TODO maybe switch to this approach
      # - id: auth
      #   name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v1
      #   with:
      #     create_credentials_file: true
      #     workload_identity_provider: <write what you got from terraform output>
      #     service_account: <write what you got from terraform output>
      - name: Expose variables
        id: vars
        run: |
          echo "cloud=$( echo ${{ matrix.dir }} |cut -d'/' -f1 )" >> "$GITHUB_OUTPUT"
          echo "environment=$( echo ${{ matrix.dir }} |cut -d'/' -f2 )" >> "$GITHUB_OUTPUT"
          echo "project=$( echo ${{ matrix.dir }} |cut -d'/' -f3 )" >> "$GITHUB_OUTPUT"

#       - name: Authenticate to Google Cloud
#         id: auth
#         uses: google-github-actions/auth@v1
#         with:
#           credentials_json: ${{ secrets[format('terraform_{0}_{1}_sa_key', inputs.product, steps.vars.outputs.environment)] }}

      # Install the preferred version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: |
          terraform init

      # Only run on the `main` branch
      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: |
          # terraform plan -no-color -lock=false -detailed-exitcode -compact-warnings -out tfplan

          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
        
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          echo "tf_plan<<EOF" >> $GITHUB_OUTPUT
          terraform show -no-color tfplan | sed '1{/^$/d}' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post to a Slack channel
        id: slack
        if: ${{ steps.plan.outcome != 'success' }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: "${{ inputs.slack_channel }}"
          # For posting a simple plain text message
          slack-message: |
            *Terraform Drift Result*

            - environment: *`${{ steps.vars.outputs.environment }}`*
            - project (region): *`${{ steps.vars.outputs.project }}`*
            - execution: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            :rocket: Terraform drift in the main branch has been detected:

            ```
            ${{ steps.plan.outputs.tf_plan }}
            ```

            _Pusher: `@${{ github.actor }}`, Working Directory: `${{ matrix.dir }}`, Cloud Provider: `${{ steps.vars.outputs.cloud }}`_
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
